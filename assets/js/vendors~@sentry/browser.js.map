{"version":3,"sources":["webpack:///../src/severity.ts","webpack:///../src/status.ts","webpack:///../src/index.ts","webpack:///../src/polyfill.ts","webpack:///../src/error.ts","webpack:///../src/dsn.ts","webpack:///../src/api.ts","webpack:///../src/integration.ts","webpack:///../src/baseclient.ts","webpack:///../../src/transports/noop.ts","webpack:///../src/basebackend.ts","webpack:///../src/supports.ts","webpack:///../src/tracekit.ts","webpack:///../src/parsers.ts","webpack:///../src/eventbuilder.ts","webpack:///../src/promisebuffer.ts","webpack:///../../src/integrations/functiontostring.ts","webpack:///../../src/transports/base.ts","webpack:///../../src/transports/fetch.ts","webpack:///../../src/transports/xhr.ts","webpack:///../src/backend.ts","webpack:///../src/version.ts","webpack:///../src/client.ts","webpack:///../../src/integrations/inboundfilters.ts","webpack:///../src/helpers.ts","webpack:///../../src/integrations/trycatch.ts","webpack:///../src/instrument.ts","webpack:///../../src/integrations/breadcrumbs.ts","webpack:///../../src/integrations/globalhandlers.ts","webpack:///../../src/integrations/linkederrors.ts","webpack:///../../src/integrations/useragent.ts","webpack:///../src/sdk.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///../src/is.ts","webpack:///../src/misc.ts","webpack:///./node_modules/process/browser.js","webpack:///../src/string.ts","webpack:///../src/logger.ts","webpack:///../src/scope.ts","webpack:///../src/syncpromise.ts","webpack:///../src/object.ts","webpack:///../src/memo.ts","webpack:///(webpack)/buildin/harmony-module.js","webpack:///../src/hub.ts"],"names":["Severity","Status","fromString","level","Debug","Info","Warning","Error","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","setPrototypeOf","Object","__proto__","Array","obj","proto","prop","hasOwnProperty","message","name","prototype","constructor","DSN_REGEX","from","this","_fromString","_fromComponents","_validate","toString","withPassword","host","path","pass","port","projectId","protocol","user","str","match","exec","split","length","slice","join","pop","components","forEach","component","isNaN","parseInt","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","push","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","key","encodeURIComponent","email","installedIntegrations","setupIntegrations","options","integrations","defaultIntegrations","userIntegrations","isArray","map","i","defaultIntegration","indexOf","userIntegration","integrationsNames","splice","getIntegrationsToSetup","integration","setupOnce","logger","log","setupIntegration","backendClass","_integrations","_processing","_backend","_options","_dsn","_isEnabled","captureException","exception","hint","scope","eventId","event_id","_getBackend","eventFromException","then","event","_processEvent","finalEvent","reason","error","captureMessage","is","eventFromMessage","captureEvent","getOptions","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","result","enabled","getIntegrations","getIntegration","id","_oO","warn","resolve","ticked","setInterval","undefined","_prepareEvent","environment","release","dist","maxValueLength","prepared","values","value","request","url","_addIntegrations","sdk","applyToEvent","sdkInfo","integrationsArray","keys","beforeSend","sampleRate","Math","random","reject","data","__sentry__","sendEvent","beforeSendResult","_handleAsyncBeforeSend","originalException","processedEvent","e","_","Skipped","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","isNativeFetch","func","test","supportsReferrerPolicy","referrerPolicy","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","stack","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","line","element","args","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","exceptionFromStacktrace","frames","prepareFramesForEvent","type","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","filename","function","in_app","lineno","reverse","eventFromUnknownInput","syntheticException","domException","eventFromString","rejection","extra","__serialized__","eventFromPlainObject","synthetic","input","attachStacktrace","originalFunctionToString","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","setTimeout","all","clearTimeout","_disabledUntil","Date","now","Promise","defaultOptions","body","JSON","stringify","method","headers","fetch","response","get","catch","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","send","transportOptions","transport","handled","SDK_NAME","platform","packages","version","showReportDialog","document","script","createElement","async","src","onLoad","onload","head","appendChild","FunctionToString","Function","context","__sentry_original__","apply","DEFAULT_IGNORE_ERRORS","InboundFilters","hub","self","client","getClient","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","pattern","blacklistUrls","whitelistUrls","oO","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","call","arguments","wrappedArguments","arg","handleEvent","withScope","addEventProcessor","mechanism","property","defineProperty","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","lastHref","_ignoreOnError","TryCatch","_wrapTimeFunction","original","originalCallback","_wrapRAF","callback","handler","_wrapEventTarget","target","global","eventName","bind","err","_wrapXHR","originalSend","xhr","xmlHttpRequestProps","wrapOptions","handlers","instrumented","instrument","console","originalConsoleLevel","triggerHandlers","instrumentConsole","addEventListener","domEventHandler","keypressEventHandler","innerOriginal","instrumentDOM","xhrproto","originalOpen","__sentry_xhr__","toUpperCase","__sentry_own_request__","commonHandlerData","startTimestamp","onreadystatechangeHandler","status_code","endTimestamp","readyStateArgs","instrumentXHR","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchData","getFetchMethod","getFetchUrl","instrumentFetch","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","to","String","location","href","instrumentHistory","addInstrumentationHandler","fetchArgs","keypressTimeout","lastCapturedEvent","debounceTimer","debounce","tagName","isContentEditable","Breadcrumbs","dom","sentry","_consoleBreadcrumb","handlerData","breadcrumb","category","addBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","addSentryBreadcrumb","_fetchBreadcrumb","filterUrl","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","relative","serializedData","parse","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","userAgent","init","SENTRY_RELEASE","initAndBind","lastEventId","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","extendStatics","d","b","p","__extends","__","create","__assign","assign","t","s","n","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","c","r","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","__generator","f","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","__exportStar","m","exports","__values","o","__read","ar","__spread","concat","__spreadArrays","il","k","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","default","__importDefault","window","module","isError","wat","isInstanceOf","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","isSyntheticEvent","base","_e","dynamicRequire","require","isNodeEnv","process","fallbackGlobalObject","getGlobalObject","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","replace","parseUrl","query","fragment","getEventDescription","consoleSandbox","originalConsole","wrappedLevels","addExceptionTypeValue","addExceptionMechanism","getLocationHref","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","el","className","classes","attr","toLowerCase","attrWhitelist","getAttribute","timestampWithMs","getTime","parseRetryAfterHeader","headerDelay","headerDate","getFunctionName","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","truncate","max","substr","snipLine","newLine","ll","start","end","min","safeJoin","delimiter","output","isMatchingPattern","PREFIX","_enabled","disable","enable","__SENTRY__","Logger","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_notifyEventProcessors","processors","index","processor","final","setUser","setTags","tags","setTag","setExtras","setExtra","setFingerprint","fingerprint","_fingerprint","setLevel","setTransaction","transaction","_transaction","setContext","setSpan","span","_span","getSpan","clone","newScope","Scope","clear","maxBreadcrumbs","timestamp","mergedBreadcrumb","clearBreadcrumbs","_applyFingerprint","contexts","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","addGlobalEventProcessor","States","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","_attachHandler","onrejected","onfulfilled","SyncPromise","collection","counter","resolvedCollection","item","val","finally","onfinally","isRejected","fill","source","replacement","wrapped","_Oo","urlEncode","object","getWalkSource","currentTarget","CustomEvent","detail","jsonSize","encodeURI","utf8Length","normalizeToSize","depth","maxSize","serialized","normalize","normalizeValue","_events","walk","memo","Infinity","normalized","serializeValue","toJSON","acc","memoize","innerKey","unmemoize","extractExceptionKeysForMessage","maxLength","sort","includedKeys","_hasWeakSet","WeakSet","_inner","has","delete","originalModule","webpackPolyfill","children","l","_version","_stack","_invokeClient","top","getStackTop","isOlderThan","bindClient","pushScope","getStack","parentScope","popScope","getScope","_lastEventId","finalHint","beforeBreadcrumb","finalBreadcrumb","extras","configureScope","oldHub","makeMain","startSpan","spanOrSpanContext","forceNoChild","_callExtensionMethod","traceHeaders","carrier","getMainCarrier","extensions","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","Hub","activeDomain","active","registryHubTopStack","getHubFromActiveDomain"],"mappings":"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","file":"vendors~@sentry/browser.js","sourcesContent":["/** JSDoc */\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    // tslint:disable:no-unsafe-any\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key. */\n  public user!: string;\n  /** private _authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private _representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    // tslint:disable-next-line:no-this-assignment\n    const { host, path, pass, port, projectId, protocol, user } = this;\n    return (\n      `${protocol}://${user}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, user, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, user });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'user', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(ERROR_MESSAGE);\n      }\n    });\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n  }\n}\n","import { DsnLike } from '@sentry/types';\nimport { Dsn, timestampWithMs, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Helper class to provide urls to different Sentry endpoints. */\nexport class API {\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n  /** Create a new instance of API */\n  public constructor(public dsn: DsnLike) {\n    this._dsnObject = new Dsn(dsn);\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns a string with auth headers in the url to the store endpoint. */\n  public getStoreEndpoint(): string {\n    return `${this._getBaseUrl()}${this.getStoreEndpointPath()}`;\n  }\n\n  /** Returns the store endpoint with auth added in url encoded. */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      sentry_key: dsn.user, // sentry_key is currently used in tracing integration to identify internal sentry requests\n      sentry_version: SENTRY_API_VERSION,\n    };\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n    // to avoid preflight CORS requests\n    return `${this.getStoreEndpoint()}?${urlEncode(auth)}`;\n  }\n\n  /** Returns the base path of the url including the port. */\n  private _getBaseUrl(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /** Returns an object that can be used in request headers. */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_timestamp=${timestampWithMs()}`); // TODO: This can be removed\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.user}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this._getBaseUrl()}${dsn.path ? `/${dsn.path}` : ''}/api/embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    integrations = [...defaultIntegrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","import { Scope } from '@sentry/hub';\nimport { Client, Event, EventHint, Integration, IntegrationClass, Options, SdkInfo, Severity } from '@sentry/types';\nimport { Dsn, isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the enviornment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected readonly _integrations: IntegrationIndex = {};\n\n  /** Is the client still processing a call? */\n  protected _processing: boolean = false;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._getBackend()\n      .eventFromException(exception, hint)\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._processing = true;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(`${message}`, level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    promisedEvent\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._processEvent(event, hint, scope)\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientProcessing(timeout).then(status => {\n      clearInterval(status.interval);\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => status.ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegrations(): IntegrationIndex {\n    return this._integrations || {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): PromiseLike<{ ready: boolean; interval: number }> {\n    return new SyncPromise<{ ready: boolean; interval: number }>(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      let interval = 0;\n      clearInterval(interval);\n\n      interval = (setInterval(() => {\n        if (!this._processing) {\n          resolve({\n            interval,\n            ready: true,\n          });\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            resolve({\n              interval,\n              ready: false,\n            });\n          }\n        }\n      }, tick) as unknown) as number;\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { environment, release, dist, maxValueLength = 250 } = this.getOptions();\n\n    const prepared: Event = { ...event };\n    if (prepared.environment === undefined && environment !== undefined) {\n      prepared.environment = environment;\n    }\n    if (prepared.release === undefined && release !== undefined) {\n      prepared.release = release;\n    }\n\n    if (prepared.dist === undefined && dist !== undefined) {\n      prepared.dist = dist;\n    }\n\n    if (prepared.message) {\n      prepared.message = truncate(prepared.message, maxValueLength);\n    }\n\n    const exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = prepared.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n\n    if (prepared.event_id === undefined) {\n      prepared.event_id = uuid4();\n    }\n\n    this._addIntegrations(prepared.sdk);\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (scope) {\n      // In case we have a hub we reassign it.\n      result = scope.applyToEvent(prepared, hint);\n    }\n\n    return result;\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n  protected _addIntegrations(sdkInfo?: SdkInfo): void {\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject('SDK not enabled, will not send event.');\n    }\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject('This event has been sampled, will not send event.');\n    }\n\n    return new SyncPromise((resolve, reject) => {\n      this._prepareEvent(event, scope, hint)\n        .then(prepared => {\n          if (prepared === null) {\n            reject('An event processor returned null, will not send event.');\n            return;\n          }\n\n          let finalEvent: Event | null = prepared;\n\n          try {\n            const isInternalException = hint && hint.data && (hint.data as { [key: string]: any }).__sentry__ === true;\n            if (isInternalException || !beforeSend) {\n              this._getBackend().sendEvent(finalEvent);\n              resolve(finalEvent);\n              return;\n            }\n\n            const beforeSendResult = beforeSend(prepared, hint);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof beforeSendResult === 'undefined') {\n              logger.error('`beforeSend` method has to return `null` or a valid event.');\n            } else if (isThenable(beforeSendResult)) {\n              this._handleAsyncBeforeSend(beforeSendResult as PromiseLike<Event | null>, resolve, reject);\n            } else {\n              finalEvent = beforeSendResult as Event | null;\n\n              if (finalEvent === null) {\n                logger.log('`beforeSend` returned `null`, will not send event.');\n                resolve(null);\n                return;\n              }\n\n              // From here on we are really async\n              this._getBackend().sendEvent(finalEvent);\n              resolve(finalEvent);\n            }\n          } catch (exception) {\n            this.captureException(exception, {\n              data: {\n                __sentry__: true,\n              },\n              originalException: exception as Error,\n            });\n            reject('`beforeSend` threw an error, will not send event.');\n          }\n        })\n        .then(null, () => {\n          reject('`beforeSend` threw an error, will not send event.');\n        });\n    });\n  }\n\n  /**\n   * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n   */\n  private _handleAsyncBeforeSend(\n    beforeSend: PromiseLike<Event | null>,\n    resolve: (event: Event) => void,\n    reject: (reason: string) => void,\n  ): void {\n    beforeSend\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          reject('`beforeSend` returned `null`, will not send event.');\n          return;\n        }\n        // From here on we are really async\n        this._getBackend().sendEvent(processedEvent);\n        resolve(processedEvent);\n      })\n      .then(null, e => {\n        reject(`beforeSend rejected with ${e}`);\n      });\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","import { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instanciate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instanciate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // It really needs 1 argument, not 0.\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore\n    // tslint:disable:no-unused-expression\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    // tslint:disable-next-line:no-unused-expression\n    new Headers();\n    // tslint:disable-next-line:no-unused-expression\n    new Request('');\n    // tslint:disable-next-line:no-unused-expression\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // tslint:disable-next-line:no-unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  if (doc) {\n    const sandbox = doc.createElement('iframe');\n    sandbox.hidden = true;\n    try {\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // tslint:disable-next-line:no-unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  // tslint:disable-next-line: no-unsafe-any\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    // tslint:disable:no-unused-expression\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  const chrome = (global as any).chrome;\n  // tslint:disable-next-line:no-unsafe-any\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// tslint:disable:object-literal-sort-keys\n\n/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n/** JSDoc */\nexport function computeStackTrace(ex: any): StackTrace {\n  // tslint:disable:no-unsafe-any\n\n  let stack = null;\n  const popSize: number = ex && ex.framesToPop;\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  // tslint:disable:no-conditional-assignment\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    // tslint:disable:no-conditional-assignment\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  // tslint:disable-next-line:strict-type-predicates\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception: {}, syntheticException?: Error, rejection?: boolean): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .slice(0, STACKTRACE_LIMIT)\n    .reverse();\n}\n","import { Event } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/** JSDoc */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as {};\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  public constructor(protected _limit?: number) {}\n\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    originalFunctionToString = Function.prototype.toString;\n\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry_original__ || this;\n      // tslint:disable-next-line:no-unsafe-any\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { API } from '@sentry/core';\nimport { Event, Response, Transport, TransportOptions } from '@sentry/types';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public url: string;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<Response> = new PromiseBuffer(30);\n\n  public constructor(public options: TransportOptions) {\n    this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      return Promise.reject({\n        event,\n        reason: `Transport locked till ${this._disabledUntil} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const defaultOptions: RequestInit = {\n      body: JSON.stringify(event),\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n\n    if (this.options.headers !== undefined) {\n      defaultOptions.headers = this.options.headers;\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        global\n          .fetch(this.url, defaultOptions)\n          .then(response => {\n            const status = Status.fromHttpCode(response.status);\n\n            if (status === Status.Success) {\n              resolve({ status });\n              return;\n            }\n\n            if (status === Status.RateLimit) {\n              const now = Date.now();\n              this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n              logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n            }\n\n            reject(response);\n          })\n          .catch(reject);\n      }),\n    );\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      return Promise.reject({\n        event,\n        reason: `Transport locked till ${this._disabledUntil} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          const status = Status.fromHttpCode(request.status);\n\n          if (status === Status.Success) {\n            resolve({ status });\n            return;\n          }\n\n          if (status === Status.RateLimit) {\n            const now = Date.now();\n            this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n            logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n          }\n\n          reject(request);\n        };\n\n        request.open('POST', this.url);\n        for (const header in this.options.headers) {\n          if (this.options.headers.hasOwnProperty(header)) {\n            request.setRequestHeader(header, this.options.headers[header]);\n          }\n        }\n        request.send(JSON.stringify(event));\n      }),\n    );\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\n\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To whitelist certain errors instead, use {@link Options.whitelistUrls}.\n   * By default, all errors will be sent.\n   */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.blacklistUrls}.\n   * By default, all errors will be sent.\n   */\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: any, hint?: EventHint): PromiseLike<Event> {\n    const syntheticException = (hint && hint.syntheticException) || undefined;\n    const event = eventFromUnknownInput(exception, syntheticException, {\n      attachStacktrace: this._options.attachStacktrace,\n    });\n    addExceptionMechanism(event, {\n      handled: true,\n      type: 'generic',\n    });\n    event.level = Severity.Error;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    const syntheticException = (hint && hint.syntheticException) || undefined;\n    const event = eventFromString(message, syntheticException, {\n      attachStacktrace: this._options.attachStacktrace,\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n}\n","export const SDK_NAME = 'sentry.javascript.browser';\nexport const SDK_VERSION = '5.11.1';\n","import { API, BaseClient, Scope } from '@sentry/core';\nimport { DsnLike, Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n      return;\n    }\n\n    const dsn = options.dsn || this.getDsn();\n\n    if (!options.eventId) {\n      logger.error('Missing `eventId` option in showReportDialog call');\n      return;\n    }\n\n    if (!dsn) {\n      logger.error('Missing `Dsn` option in showReportDialog call');\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = new API(dsn).getReportDialogEndpoint(options);\n\n    if (options.onLoad) {\n      script.onload = options.onLoad;\n    }\n\n    (document.head || document.body).appendChild(script);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  blacklistUrls?: Array<string | RegExp>;\n  ignoreErrors?: Array<string | RegExp>;\n  ignoreInternal?: boolean;\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  public constructor(private readonly _options: InboundFiltersOptions = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: InboundFiltersOptions): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isBlacklistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`blacklistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isWhitelistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`whitelistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isBlacklistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.blacklistUrls || !options.blacklistUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.blacklistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isWhitelistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.whitelistUrls || !options.whitelistUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.whitelistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: InboundFiltersOptions = {}): InboundFiltersOptions {\n    return {\n      blacklistUrls: [...(this._options.blacklistUrls || []), ...(clientOptions.blacklistUrls || [])],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n      whitelistUrls: [...(this._options.whitelistUrls || []), ...(clientOptions.whitelistUrls || [])],\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","import { captureException, withScope } from '@sentry/core';\nimport { Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, normalize } from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n): any {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    // tslint:disable:no-unsafe-any\n    try {\n      // tslint:disable-next-line:strict-type-predicates\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n      // tslint:enable:no-unsafe-any\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: normalize(args, 3),\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // tslint:disable-line:no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch (_oO) {\n    /*no-empty*/\n  }\n\n  return sentryWrapped;\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress';\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /** JSDoc */\n  private _ignoreOnError: number = 0;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    return function(this: any, callback: () => void): () => void {\n      return original(\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    const global = getGlobalObject() as { [key: string]: any };\n    const proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          // tslint:disable-next-line:no-unbound-method strict-type-predicates\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        let callback = (fn as any) as WrappedFunction;\n        try {\n          callback = callback && (callback.__sentry_wrapped__ || callback);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, callback, options);\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _wrapXHR(originalSend: () => void): () => void {\n    return function(this: XMLHttpRequest, ...args: any[]): void {\n      const xhr = this; // tslint:disable-line:no-this-assignment\n      const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress'];\n\n      xmlHttpRequestProps.forEach(prop => {\n        if (prop in this && typeof this[prop] === 'function') {\n          fill(this, prop, original =>\n            wrap(original, {\n              mechanism: {\n                data: {\n                  function: prop,\n                  handler: getFunctionName(original),\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            }),\n          );\n        }\n      });\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: 'onreadystatechange',\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          if (original.__sentry_original__) {\n            wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n\n      return originalSend.apply(this, args);\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    this._ignoreOnError = this._ignoreOnError;\n\n    const global = getGlobalObject();\n\n    fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n\n    if ('XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n    }\n\n    [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload',\n    ].forEach(this._wrapEventTarget.bind(this));\n  }\n}\n","/* tslint:disable:only-arrow-functions no-unsafe-any */\n\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getFunctionName, getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\n/** Object describing handler that will be triggered for a given `type` of instrumentation */\ninterface InstrumentHandler {\n  type: InstrumentHandlerType;\n  callback: InstrumentHandlerCallback;\n}\ntype InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'sentry' | 'xhr';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler: InstrumentHandler): void {\n  // tslint:disable-next-line:strict-type-predicates\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n  handlers[handler.type] = handlers[handler.type] || [];\n  (handlers[handler.type] as InstrumentHandlerCallback[]).push(handler.callback);\n  instrument(handler.type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      logger.error(\n        `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n          handler,\n        )}\\nError: ${e}`,\n      );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n      return function(...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function(originalFetch: () => void): () => void {\n    return function(...args: any[]): void {\n      const commonHandlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...commonHandlerData,\n      });\n\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...commonHandlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...commonHandlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n  };\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function(originalOpen: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      this.__sentry_xhr__ = {\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (isString(url) && this.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function(originalSend: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const xhr = this; // tslint:disable-line:no-this-assignment\n      const commonHandlerData = {\n        args,\n        startTimestamp: Date.now(),\n        xhr,\n      };\n\n      triggerHandlers('xhr', {\n        ...commonHandlerData,\n      });\n\n      /**\n       * @hidden\n       */\n      function onreadystatechangeHandler(): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n          triggerHandlers('xhr', {\n            ...commonHandlerData,\n            endTimestamp: Date.now(),\n          });\n        }\n      }\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          return function(...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        // if onreadystatechange wasn't actually set by the page on this xhr, we\n        // are free to set our own and capture the breadcrumb\n        xhr.onreadystatechange = onreadystatechangeHandler;\n      }\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function(this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      return oldOnPopState.apply(this, args);\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function(this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n  // to the document. Do this before we instrument addEventListener.\n  global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n  global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n\n  // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (\n      eventName: string,\n      fn: EventListenerOrEventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerOrEventListenerObject, capture?: boolean, secure?: boolean) => void {\n        if (fn && (fn as EventListenerObject).handleEvent) {\n          if (eventName === 'click') {\n            fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n              return function(this: any, event: Event): (event: Event) => void {\n                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n          if (eventName === 'keypress') {\n            fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n              return function(this: any, event: Event): (event: Event) => void {\n                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n        } else {\n          if (eventName === 'click') {\n            domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n          }\n          if (eventName === 'keypress') {\n            keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n          }\n        }\n\n        return original.call(this, eventName, fn, options);\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (\n      this: any,\n      eventName: string,\n      fn: EventListenerOrEventListenerObject,\n      options?: boolean | EventListenerOptions,\n    ) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        let callback = fn as WrappedFunction;\n        try {\n          callback = callback && (callback.__sentry_wrapped__ || callback);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, callback, options);\n      };\n    });\n  });\n}\n\nconst debounceDuration: number = 1000;\nlet debounceTimer: number = 0;\nlet keypressTimeout: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name: string, handler: Function, debounce: boolean = false): (event: Event) => void {\n  return (event: Event) => {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined;\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(() => {\n        handler({ event, name });\n      });\n    } else {\n      handler({ event, name });\n    }\n  };\n}\n\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler: Function): (event: Event) => void {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return (event: Event) => {\n    let target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    const tagName = target && (target as HTMLElement).tagName;\n\n    // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n    if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !(target as HTMLElement).isContentEditable)) {\n      return;\n    }\n\n    // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n    if (!keypressTimeout) {\n      domEventHandler('input', handler)(event);\n    }\n    clearTimeout(keypressTimeout);\n\n    keypressTimeout = (setTimeout(() => {\n      keypressTimeout = undefined;\n    }, debounceDuration) as any) as number;\n  };\n}\n","import { API, getCurrentHub } from '@sentry/core';\nimport { Integration, Severity } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getEventDescription,\n  getGlobalObject,\n  htmlTreeAsString,\n  logger,\n  normalize,\n  parseUrl,\n  safeJoin,\n} from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\n\n/**\n * @hidden\n */\nexport interface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n  };\n}\n\n/** JSDoc */\ninterface BreadcrumbIntegrations {\n  console?: boolean;\n  dom?: boolean;\n  fetch?: boolean;\n  history?: boolean;\n  sentry?: boolean;\n  xhr?: boolean;\n}\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbIntegrations;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: BreadcrumbIntegrations) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Creates breadcrumbs from console API calls\n   */\n  private _consoleBreadcrumb(handlerData: { [key: string]: any }): void {\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        extra: {\n          arguments: normalize(handlerData.args, 3),\n        },\n        logger: 'console',\n      },\n      level: Severity.fromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.extra.arguments = normalize(handlerData.args.slice(1), 3);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    getCurrentHub().addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  }\n\n  /**\n   * Creates breadcrumbs from DOM API calls\n   */\n  private _domBreadcrumb(handlerData: { [key: string]: any }): void {\n    let target;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target as Node)\n        : htmlTreeAsString((handlerData.event as unknown) as Node);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event,\n        name: handlerData.name,\n      },\n    );\n  }\n\n  /**\n   * Creates breadcrumbs from XHR API calls\n   */\n  private _xhrBreadcrumb(handlerData: { [key: string]: any }): void {\n    if (handlerData.endTimestamp) {\n      // We only capture complete, non-sentry requests\n      if (handlerData.xhr.__sentry_own_request__) {\n        return;\n      }\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'xhr',\n          data: handlerData.xhr.__sentry_xhr__,\n          type: 'http',\n        },\n        {\n          xhr: handlerData.xhr,\n        },\n      );\n\n      return;\n    }\n\n    // We only capture issued sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      addSentryBreadcrumb(handlerData.args[0]);\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from fetch API calls\n   */\n  private _fetchBreadcrumb(handlerData: { [key: string]: any }): void {\n    // We only capture complete fetch requests\n    if (!handlerData.endTimestamp) {\n      return;\n    }\n\n    const client = getCurrentHub().getClient<BrowserClient>();\n    const dsn = client && client.getDsn();\n\n    if (dsn) {\n      const filterUrl = new API(dsn).getStoreEndpoint();\n      // if Sentry key appears in URL, don't capture it as a request\n      // but rather as our own 'sentry' type breadcrumb\n      if (\n        filterUrl &&\n        handlerData.fetchData.url.indexOf(filterUrl) !== -1 &&\n        handlerData.fetchData.method === 'POST' &&\n        handlerData.args[1] &&\n        handlerData.args[1].body\n      ) {\n        addSentryBreadcrumb(handlerData.args[1].body);\n        return;\n      }\n    }\n\n    if (handlerData.error) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: {\n            ...handlerData.fetchData,\n            status_code: handlerData.response.status,\n          },\n          level: Severity.Error,\n          type: 'http',\n        },\n        {\n          data: handlerData.error,\n          input: handlerData.args,\n        },\n      );\n    } else {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: {\n            ...handlerData.fetchData,\n            status_code: handlerData.response.status,\n          },\n          type: 'http',\n        },\n        {\n          input: handlerData.args,\n          response: handlerData.response,\n        },\n      );\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from history API calls\n   */\n  private _historyBreadcrumb(handlerData: { [key: string]: any }): void {\n    const global = getGlobalObject<Window>();\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(global.location.href);\n    let parsedFrom = parseUrl(from);\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      // tslint:disable-next-line:no-parameter-reassignment\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      // tslint:disable-next-line:no-parameter-reassignment\n      from = parsedFrom.relative;\n    }\n\n    getCurrentHub().addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._consoleBreadcrumb(...args);\n        },\n        type: 'console',\n      });\n    }\n    if (this._options.dom) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._domBreadcrumb(...args);\n        },\n        type: 'dom',\n      });\n    }\n    if (this._options.xhr) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._xhrBreadcrumb(...args);\n        },\n        type: 'xhr',\n      });\n    }\n    if (this._options.fetch) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._fetchBreadcrumb(...args);\n        },\n        type: 'fetch',\n      });\n    }\n    if (this._options.history) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._historyBreadcrumb(...args);\n        },\n        type: 'history',\n      });\n    }\n  }\n}\n\n/**\n * Create a breadcrumb of `sentry` from the events themselves\n */\nfunction addSentryBreadcrumb(serializedData: string): void {\n  // There's always something that can go wrong with deserialization...\n  try {\n    const event = JSON.parse(serializedData);\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'sentry',\n        event_id: event.event_id,\n        level: event.level || Severity.fromString('error'),\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  } catch (_oO) {\n    logger.error('Error while adding sentry type breadcrumb');\n  }\n}\n","import { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  getGlobalObject,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private readonly _global: Window = getGlobalObject();\n\n  /** JSDoc */\n  private _oldOnErrorHandler: OnErrorEventHandler = null;\n\n  /** JSDoc */\n  private _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    const self = this; // tslint:disable-line:no-this-assignment\n    this._oldOnErrorHandler = this._global.onerror;\n\n    this._global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n      const currentHub = getCurrentHub();\n      const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n      if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n        if (self._oldOnErrorHandler) {\n          return self._oldOnErrorHandler.apply(this, arguments);\n        }\n        return false;\n      }\n\n      const client = currentHub.getClient();\n      const event = isPrimitive(error)\n        ? self._eventFromIncompleteOnError(msg, url, line, column)\n        : self._enhanceEventWithInitialFrame(\n            eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: false,\n            }),\n            url,\n            line,\n            column,\n          );\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'onerror',\n      });\n\n      currentHub.captureEvent(event, {\n        originalException: error,\n      });\n\n      if (self._oldOnErrorHandler) {\n        return self._oldOnErrorHandler.apply(this, arguments);\n      }\n\n      return false;\n    };\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    const self = this; // tslint:disable-line:no-this-assignment\n    this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n\n    this._global.onunhandledrejection = function(e: any): boolean {\n      let error = e;\n      try {\n        error = e && 'reason' in e ? e.reason : e;\n      } catch (_oO) {\n        // no-empty\n      }\n\n      const currentHub = getCurrentHub();\n      const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n      if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n        if (self._oldOnUnhandledRejectionHandler) {\n          return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n      }\n\n      const client = currentHub.getClient();\n      const event = isPrimitive(error)\n        ? self._eventFromIncompleteRejection(error)\n        : eventFromUnknownInput(error, undefined, {\n            attachStacktrace: client && client.getOptions().attachStacktrace,\n            rejection: true,\n          });\n\n      event.level = Severity.Error;\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'onunhandledrejection',\n      });\n\n      currentHub.captureEvent(event, {\n        originalException: error,\n      });\n\n      if (self._oldOnUnhandledRejectionHandler) {\n        return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n      }\n\n      return true;\n    };\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n   */\n  private _eventFromIncompleteRejection(error: any): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            value: `Non-Error promise rejection captured with value: ${error}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException as ExtendedError, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        if (!global.navigator || !global.location) {\n          return event;\n        }\n\n        // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n        const request = event.request || {};\n        request.url = request.url || global.location.href;\n        request.headers = request.headers || {};\n        request.headers['User-Agent'] = global.navigator.userAgent;\n\n        return {\n          ...event,\n          request,\n        };\n      }\n      return event;\n    });\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient, ReportDialogOptions } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  initAndBind(BrowserClient, options);\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn: Function): any {\n  return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): boolean {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  // tslint:disable-next-line:strict-type-predicates\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  // tslint:disable-next-line:strict-type-predicates\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // tslint:disable:no-unsafe-any\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n  // tslint:enable:no-unsafe-any\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  // tslint:disable-next-line:no-unsafe-any\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    // tslint:disable-next-line:no-unsafe-any\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","import { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isString } from './is';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod: any, request: string): any {\n  // tslint:disable-next-line: no-unsafe-any\n  return mod.require(request);\n}\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // tslint:disable:strict-type-predicates\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n// tslint:enable:strict-type-predicates\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // tslint:disable-next-line:no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // tslint:disable-next-line:no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // tslint:disable-next-line:no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // tslint:disable-next-line:no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    if (level in global.console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore\n    // tslint:disable:no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    getAttribute(key: string): string; // tslint:disable-line:completed-docs\n    tagName?: string;\n    id?: string;\n    className?: string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * Returns a timestamp in seconds with milliseconds precision.\n */\nexport function timestampWithMs(): number {\n  return new Date().getTime() / 1000;\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { isRegExp } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\n\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    colno = ll; // tslint:disable-line:no-parameter-reassignment\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","import { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","import {\n  Breadcrumb,\n  Event,\n  EventHint,\n  EventProcessor,\n  Scope as ScopeInterface,\n  Severity,\n  Span,\n  User,\n} from '@sentry/types';\nimport { getGlobalObject, isThenable, normalize, SyncPromise, timestampWithMs } from '@sentry/utils';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: string } = {};\n\n  /** Extra */\n  protected _extra: { [key: string]: any } = {};\n\n  /** Contexts */\n  protected _context: { [key: string]: any } = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction */\n  protected _transaction?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(() => {\n        this._scopeListeners.forEach(callback => {\n          callback(this);\n        });\n        this._notifyingListeners = false;\n      });\n    }\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      // tslint:disable-next-line:strict-type-predicates\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = normalize(user);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): this {\n    this._tags = {\n      ...this._tags,\n      ...normalize(tags),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): this {\n    this._tags = { ...this._tags, [key]: normalize(value) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extra: { [key: string]: any }): this {\n    this._extra = {\n      ...this._extra,\n      ...normalize(extra),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): this {\n    this._extra = { ...this._extra, [key]: normalize(extra) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = normalize(fingerprint);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = normalize(level);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransaction(transaction?: string): this {\n    this._transaction = transaction;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): this {\n    this._context[name] = context ? normalize(context) : undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Internal getter for Span, used in Hub.\n   * @hidden\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._context = { ...scope._context };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._transaction = scope._transaction;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._context = {};\n    this._level = undefined;\n    this._transaction = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const timestamp = timestampWithMs();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, normalize(mergedBreadcrumb)].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, normalize(mergedBreadcrumb)];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._context && Object.keys(this._context).length) {\n      event.contexts = { ...this._context, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transaction) {\n      event.transaction = this._transaction;\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  const global = getGlobalObject<Window | NodeJS.Global>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","import { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        // tslint:disable-next-line:no-unsafe-any\n        resolve(val);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    if (this._state === States.REJECTED) {\n      this._handlers.forEach(handler => {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      });\n    } else {\n      this._handlers.forEach(handler => {\n        if (handler.onfulfilled) {\n          // tslint:disable-next-line:no-unsafe-any\n          handler.onfulfilled(this._value);\n        }\n      });\n    }\n\n    this._handlers = [];\n  };\n}\n\nexport { SyncPromise };\n","import { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { isElement, isError, isEvent, isInstanceOf, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName, htmlTreeAsString } from './misc';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacement: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacement(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(\n      // tslint:disable-next-line:no-unsafe-any\n      key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`,\n    )\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      stack: string | undefined;\n      message: string;\n      name: string;\n      [key: string]: any;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // tslint:disable-next-line:no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  // tslint:disable-next-line:no-tautology-expression\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  // If value implements `toJSON` method, call it and return early\n  // tslint:disable:no-unsafe-any\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  // tslint:enable:no-unsafe-any\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input: any, depth?: number): any {\n  try {\n    // tslint:disable-next-line:no-unsafe-any\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  // tslint:disable:strict-type-predicates\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    // tslint:disable-next-line\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  Event,\n  EventHint,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Severity,\n  Span,\n  SpanContext,\n  User,\n} from '@sentry/types';\nimport {\n  consoleSandbox,\n  dynamicRequire,\n  getGlobalObject,\n  isNodeEnv,\n  logger,\n  timestampWithMs,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Carrier, Layer } from './interfaces';\nimport { Scope } from './scope';\n\ndeclare module 'domain' {\n  export let active: Domain;\n  /**\n   * Extension for domain interface\n   */\n  export interface Domain {\n    __SENTRY__?: Carrier;\n  }\n}\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack.push({ client, scope });\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const top = this.getStackTop();\n    if (top && top.client && top.client[method]) {\n      (top.client as any)[method](...args, top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const stack = this.getStack();\n    const parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    const scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    return this.getStack().pop() !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (top.client.getOptions && top.client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    const timestamp = timestampWithMs();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: { [key: string]: any }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) {\n      return null;\n    }\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(spanOrSpanContext?: Span | SpanContext, forceNoChild: boolean = false): Span {\n    return this._callExtensionMethod<Span>('startSpan', spanOrSpanContext, forceNoChild);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    // tslint:disable-next-line: strict-type-predicates\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    const domain = dynamicRequire(module, 'domain');\n    const activeDomain = domain.active;\n\n    // If there no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or its an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) {\n    return false;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n"],"sourceRoot":""}